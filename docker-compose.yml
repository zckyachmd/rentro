# Development docker-compose for Rentro (Laravel 12 + Inertia/React)
# Compose Spec: version key omitted (modern Compose). See docs.
# Services:
# - app       : PHP-FPM (target: app-dev)
# - web       : Nginx (serve Laravel via PHP-FPM; proxy_pass to app:9000)
# - db        : PostgreSQL 15
# - redis     : Redis 7 (queue/cache/session)
# - horizon   : Laravel Horizon (queue worker)
# - scheduler : Laravel Scheduler (schedule:work)
# - vite      : Vite dev server (optional, enable via profile)
# - mailhog   : Mail testing tool (SMTP capture + Web UI)

name: rentro-dev

services:
  app:
    build:
      context: .
      target: app-dev
      args:
        TZ: ${TZ:-Asia/Jakarta}
        PHP_TAG: ${PHP_TAG:-8.4-fpm-bookworm}
    env_file: [.env]
    environment:
      APP_ENV: ${APP_ENV:-local}
      FPM_MAX_CHILDREN: ${FPM_MAX_CHILDREN:-20}
      FPM_START_SERVERS: ${FPM_START_SERVERS:-4}
      FPM_MIN_SPARE_SERVERS: ${FPM_MIN_SPARE_SERVERS:-4}
      FPM_MAX_SPARE_SERVERS: ${FPM_MAX_SPARE_SERVERS:-8}
      FPM_MAX_REQUESTS: ${FPM_MAX_REQUESTS:-300}
      FPM_REQUEST_TERMINATE_TIMEOUT: ${FPM_REQUEST_TERMINATE_TIMEOUT:-60s}
      DB_HOST: db
      DB_PORT: 5432
      REDIS_HOST: redis
      MAIL_MAILER: smtp
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: ""
    volumes:
      - .:/var/www/html:cached
      - vendor:/var/www/html/vendor
      - node_modules:/var/www/html/node_modules
    command: >-
      sh -lc "if [ ! -f vendor/autoload.php ]; then \
        echo '[app] composer install...'; \
        composer install --no-interaction --no-progress; \
      else \
        echo '[app] vendor exists'; \
      fi && /usr/local/sbin/php-fpm -F"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    init: true
    healthcheck:
      test: ["CMD", "php", "-v"]
      interval: 30s
      timeout: 3s
      retries: 3

  web:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./public:/var/www/html/public:cached
      - ./storage:/var/www/html/storage:cached
      - ./docker/nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      app:
        condition: service_healthy
    restart: unless-stopped
    init: true

  db:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: ${DB_DATABASE:-rentro}
      POSTGRES_USER: ${DB_USERNAME:-rentro}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
      TZ: ${TZ:-Asia/Jakarta}
    ports:
      - "5435:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  horizon:
    build:
      context: .
      target: app-dev
      args:
        TZ: ${TZ:-Asia/Jakarta}
        PHP_TAG: ${PHP_TAG:-8.4-fpm-bookworm}
    command: php artisan horizon
    env_file: [.env]
    environment:
      APP_ENV: ${APP_ENV:-local}
      QUEUE_CONNECTION: redis
      DB_HOST: db
      DB_PORT: 5432
      REDIS_HOST: redis
      MAIL_MAILER: smtp
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: ""
    volumes:
      - .:/var/www/html:cached
      - vendor:/var/www/html/vendor
    depends_on:
      app:
        condition: service_healthy
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    init: true
    profiles: ["workers"]

  scheduler:
    build:
      context: .
      target: app-dev
      args:
        TZ: ${TZ:-Asia/Jakarta}
        PHP_TAG: ${PHP_TAG:-8.4-fpm-bookworm}
    command: php artisan schedule:work
    env_file: [.env]
    environment:
      APP_ENV: ${APP_ENV:-local}
      DB_HOST: db
      DB_PORT: 5432
      REDIS_HOST: redis
      MAIL_MAILER: smtp
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: ""
    volumes:
      - .:/var/www/html:cached
      - vendor:/var/www/html/vendor
    depends_on:
      app:
        condition: service_healthy
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    init: true
    profiles: ["workers"]

  vite:
    image: node:20-alpine
    working_dir: /var/www/html
    environment:
      COREPACK_ENABLE_DOWNLOAD_PROMPT: "1"
      LARAVEL_BYPASS_ENV_CHECK: "1"
      CHOKIDAR_USEPOLLING: ${CHOKIDAR_USEPOLLING:-false}
      CHOKIDAR_INTERVAL: ${CHOKIDAR_INTERVAL:-500}
      PNPM_STORE_DIR: /pnpm-store
      PNPM_VERSION: ${PNPM_VERSION:-9.12.3}
    command: >-
      sh -lc "corepack enable && corepack prepare pnpm@${PNPM_VERSION} --activate && \
      if [ -x node_modules/.bin/vite ]; then \
        echo '[vite] deps present, skipping install'; \
      else \
        echo '[vite] installing deps...'; \
        pnpm install --frozen-lockfile --config.confirmModulesPurge=false; \
      fi && pnpm run dev -- --host"
    ports:
      - "5173:5173"
    volumes:
      - .:/var/www/html:cached
      - node_modules:/var/www/html/node_modules
      - pnpm_store:/pnpm-store
    depends_on:
      app:
        condition: service_started
    profiles: ["devtools"]
    restart: unless-stopped

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "8025:8025"
      - "1025:1025"
    restart: unless-stopped
    profiles: ["devtools"]

volumes:
  pgdata:
  vendor:
  node_modules:
  pnpm_store:
