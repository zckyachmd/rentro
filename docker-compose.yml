services:
  web:
    container_name: rentro_web
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
      args:
        BASE_REGISTRY: ${BASE_REGISTRY:-mirror.gcr.io/library}
    image: rentro/web:prod
    ports:
      - "${APP_PORT:-8888}:80"
    volumes:
      - app_shared:/var/www/html:ro
    read_only: true
    tmpfs:
      - /var/cache/nginx
      - /var/run
      - /var/tmp
      - /var/log/nginx
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
      - CHOWN
      - SETUID
      - SETGID
    healthcheck:
      test: ["CMD-SHELL", "/usr/local/bin/nginx-healthcheck.sh"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    init: true
    depends_on:
      app:
        condition: service_healthy
    restart: unless-stopped

  app:
    container_name: rentro_app
    build:
      context: .
      dockerfile: docker/app/Dockerfile
      args:
        BASE_REGISTRY: ${BASE_REGISTRY:-mirror.gcr.io/library}
    image: rentro/app:prod
    working_dir: /var/www/html
    volumes:
      - app_shared:/var/www/html
    env_file:
      - .env
    environment:
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE:-app}
      DB_USERNAME: ${DB_USERNAME:-app}
      DB_PASSWORD: ${DB_PASSWORD:-secret}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_CLIENT: phpredis
      CACHE_STORE: redis
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      BROADCAST_DRIVER: redis
      AUTO_MIGRATE: ${AUTO_MIGRATE:-1}
      AUTO_SEED: ${AUTO_SEED:-1}
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "/usr/local/bin/app-healthcheck.sh"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    init: true
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: unless-stopped
    stop_grace_period: 15s

  redis:
    container_name: rentro_redis
    image: redis:7
    command: ["redis-server","--save","","--appendonly","no"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    init: true

  db:
    container_name: rentro_db
    image: postgres:16
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: ${DB_DATABASE:-app}
      POSTGRES_USER: ${DB_USERNAME:-app}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
    volumes: ["pg_data:/var/lib/postgresql/data"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U \"$${POSTGRES_USER}\" -d \"$${POSTGRES_DB}\""]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    init: true

  ssr:
    container_name: rentro_ssr
    build:
      context: .
      dockerfile: docker/ssr/Dockerfile
      args:
        BASE_REGISTRY: ${BASE_REGISTRY:-mirror.gcr.io/library}
    image: rentro/ssr:prod
    working_dir: /srv
    user: node
    read_only: true
    tmpfs:
      - /tmp
    volumes:
      - app_shared:/srv/app:ro
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    healthcheck:
      test: ["CMD-SHELL", "/usr/local/bin/ssr-healthcheck.sh"]
      interval: 20s
      timeout: 3s
      retries: 3
      start_period: 10s
    depends_on:
      app:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 13714
      NODE_OPTIONS: --max-old-space-size=512
    restart: unless-stopped
    init: true
    profiles: ["ssr"]

  horizon:
    container_name: rentro_horizon
    image: rentro/app:prod
    command: ["php", "artisan", "horizon"]
    profiles: ["workers"]
    working_dir: /var/www/html
    volumes:
      - app_shared:/var/www/html
    env_file:
      - .env
    environment:
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE:-app}
      DB_USERNAME: ${DB_USERNAME:-app}
      DB_PASSWORD: ${DB_PASSWORD:-secret}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_CLIENT: phpredis
      QUEUE_CONNECTION: redis
      CACHE_STORE: redis
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      BROADCAST_DRIVER: redis
      # Auto-migrate/seed controls (default ON; set to 0/false in .env to disable)
      AUTO_MIGRATE: ${AUTO_MIGRATE:-1}
      AUTO_SEED: ${AUTO_SEED:-1}
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "/usr/local/bin/app-healthcheck.sh"]
      interval: 20s
      timeout: 3s
      retries: 3
      start_period: 10s
    depends_on:
      app:
        condition: service_healthy
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: unless-stopped
    init: true

  scheduler:
    container_name: rentro_scheduler
    image: rentro/app:prod
    command: ["php", "artisan", "schedule:work", "--no-interaction"]
    profiles: ["workers"]
    working_dir: /var/www/html
    volumes:
      - app_shared:/var/www/html
    env_file:
      - .env
    environment:
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE:-app}
      DB_USERNAME: ${DB_USERNAME:-app}
      DB_PASSWORD: ${DB_PASSWORD:-secret}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_CLIENT: phpredis
      QUEUE_CONNECTION: redis
      CACHE_STORE: redis
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      BROADCAST_DRIVER: redis
      # Auto-migrate/seed controls (default ON; set to 0/false in .env to disable)
      AUTO_MIGRATE: ${AUTO_MIGRATE:-1}
      AUTO_SEED: ${AUTO_SEED:-1}
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "/usr/local/bin/app-healthcheck.sh"]
      interval: 20s
      timeout: 3s
      retries: 3
      start_period: 10s
    depends_on:
      app:
        condition: service_healthy
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: unless-stopped
    init: true

volumes:
  app_shared:
  pg_data:
  redis_data:

networks:
  default:
    name: rentro-net
    ipam:
      config:
        - subnet: 172.20.0.0/24
